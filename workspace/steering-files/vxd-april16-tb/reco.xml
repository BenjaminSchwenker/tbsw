<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Sun Aug  7 19:33:47 2016

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="LoadNoiseDB"/>
      <processor name="PXDClusterizer"/>
      <processor name="PXDHitMaker"/>
      <processor name="FastTracker"/>
      <processor name="PXDAnalysisIB"/>
      <processor name="PXDAnalysisOB"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> rawdata.slcio </parameter>
      <parameter name="GearXMLFile" value="geometry.xml"/>
      <parameter name="MaxRecordNumber" value="maxeventvalue"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE3"/>
   </global>
   
   <processor name="LoadNoiseDB" type="ConditionsProcessor">
     <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
     <!--Initialization of a conditions db file handler-->
     <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
     <!--Initialization of a data file handler-->
     <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
     <!--Initialization of a simple conditions file handler-->
     <parameter name="SimpleFileHandler" type="StringVec"> status NoiseDB-DEP.slcio status </parameter>
   </processor>
     
   <processor name="PXDClusterizer" type="DEPFETSparseClustering">
     <!--DEPFETSparseClustering: Looking for clusters in zs pixel data-->
     <!--Name of input sparsified pixel data collection-->
     <parameter name="SparseDataCollectionName" type="string" lcioInType="TrackerData"> PXDDigits </parameter>
     <!--Input status collection name-->
     <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> status </parameter>
     <!--Name of the output cluster collection-->
     <parameter name="ClusterCollectionName" type="string" lcioOutType="TrackerPulse"> zscluster </parameter>
     <!--0: common side; 1: common corner; 3: max. one missing pixel-->
     <parameter name="AcceptDiagonalCluster" type="int" value="1"/>
     <!--Output root file name-->
     <parameter name="RootFileName" type="string" value="Cluster.root"/>
     <!--Threshold for cluster signal-->
     <parameter name="SparseClusterCut" type="float" value="0"/>
     <!--Threshold for seed pixel signal-->
     <parameter name="SparseSeedCut" type="float" value="0"/>
     <!--Threshold for zero suppression-->
     <parameter name="SparseZSCut" type="float" value="0"/>
   </processor>
   
   <processor name="PXDHitMaker" type="DEPFETHitMaker">
     <!--DEPFETHitMaker: Producing hits from clusters-->
     <!--Names of input cluster collections-->
     <parameter name="ClusterCollectionNameVec" type="string" lcioInType="TrackerPulse"> zscluster </parameter>
     <!--To use only kGoodQuality write 0 here-->
     <parameter name="ClusterQualitySelection" type="int" value="0"/>
     <!--Select here how the reconstructed position is calculated.
       Enter a cluster type name for each detector sorted to plane number.
       BINARY: Use centre of seed pixel
       COG: Use center of gravity method
       COGM26: Use Mimosa26 specific center of gravity method
       ETA: Use eta method
       AHT: Use analog head tail method
       TAKIETA: Use TAKI Eta method
     -->
     <parameter name="ClusterTypes" type="StringVec" value="COG"/>
     <!--This is name of root file containing eta functions.-->
     <parameter name="EtaFileName" type="string" value="etahisto.root"/>
     <!--Names of output hit collections. Order should match cluster collections.-->
     <parameter name="HitCollectionNameVec" type="StringVec" value="hits"/>
     <!--Output root file name-->
     <parameter name="RootFileName" type="string" value="hits.root"/>
   </processor>
   
   <processor name="FastTracker" type="DEPFETFastTracker">
     <!--DEPFETFastTracker: Track finder for pixel tracking telescopes-->
     <!--Input hit collection names-->
     <parameter name="InputHitCollectionNameVec" type="StringVec" lcioInType="TrackerHit"> PXDhits SVDhits </parameter>
     <!--Collection name for fitted tracks-->
     <parameter name="OutputTrackCollectionName" type="string" lcioOutType="Track"> tracks </parameter>
     <!--This is the name of the LCIO file with the alignment constants (add .slcio)-->
     <parameter name="AlignmentDBFileName" type="string" value="eudet-alignmentDB.slcio"/>
     <!--Enter plane numbers of bad detectors-->
     <parameter name="ExcludeDetector" type="IntVec" value=""/>
     <!--To use only GoodQuality write 0 here-->
     <parameter name="HitQualitySelection" type="int" value="0"/>
     <!--Maximum hit residual [mm]-->
     <parameter name="MaxResidual" type="float" value="0.4"/>
     <!--Maximum track chisq in track fit-->
     <parameter name="MaxTrackChi2" type="float" value="100"/>
     <!--Maximum number of consecutive missing hits in track-->
     <parameter name="MaximumGap" type="int" value="1"/>
     <!--Maximum slope of candiate tracks in Z=0 plane (rad). Set cut to zero to deactivate.-->
     <parameter name="MaximumSlope" type="float" value="0.1"/>
     <!--Minimum number of hits in track-->
     <parameter name="MinimumHits" type="int" value="4"/>
     <!--Chi2 cut for removal of bad hits-->
     <parameter name="OutlierChi2Cut" type="float" value="20"/>
     <!--Fitting iteration for removal of bad hits-->
     <parameter name="OutlierIterations" type="int" value="3"/>
     <!--Particle charge [e]-->
     <parameter name="ParticleCharge" type="double" value="-1"/>
     <!--Particle mass [GeV]-->
     <parameter name="ParticleMass" type="double" value="0.000551"/>
     <!--Particle momentum [GeV]-->
     <parameter name="ParticleMomentum" type="double" value="5.0 1.0 -1.0"/>
     <!--Build track seeds from first plane and second plane-->
     <parameter name="PassOne_FirstPlane" type="int" value="2"/>
     <!--Build track seeds from first plane and second plane-->
     <parameter name="PassOne_SecondPlane" type="int" value="3"/>
     <!--Build track seeds from first plane and second plane-->
     <parameter name="PassTwo_FirstPlane" type="int" value="-1"/>
     <!--Build track seeds from first plane and second plane-->
     <parameter name="PassTwo_SecondPlane" type="int" value="-1"/>
     <!--Output root file name-->
     <parameter name="RootFileName" type="string" value="Eudet-RecoTracks.root"/>
   </processor>
   
   <processor name="PXDAnalysisIB" type="DEPFETDUTTool">
     <!--DEPFETDUTTool: DUT Analysis Processor-->
     <!--Name of DUT data collection-->
     <parameter name="DataCollection" type="string" lcioInType="TrackerData"> data_dep </parameter>
     <!--Name of DUT hit collection-->
     <parameter name="HitCollection" type="string" lcioInType="TrackerHit"> PXDhits </parameter>
     <!--Name of DUT noise collection-->
     <parameter name="NoiseCollection" type="string" lcioInType="TrackerData"> noise </parameter>
     <!--Name of DUT rawdata collection-->
     <parameter name="RawDataCollection" type="string" lcioInType="TrackerRawData"> rawdata_dep </parameter>
     <!--Name of DUT status collection-->
     <parameter name="StatusCollection" type="string" lcioInType="TrackerRawData"> status </parameter>
     <!--Name of telescope track collection-->
     <parameter name="TrackCollection" type="string" lcioInType="Track"> tracks </parameter>
     <!--This is the name of the LCIO file with the alignment constants (add .slcio)-->
     <parameter name="AlignmentDBFileName" type="string" value="eudet-alignmentDB.slcio"/>
     <!--Plane number of DUT along the beam line-->
     <parameter name="DUTPlane" type="int" value="0"/>
     <!--Maximum hit2track distance for hit matching [mm]-->
     <parameter name="HitDistMax" type="double" value="1.0"/>
     <!--Chi2 cut for removal of bad hits-->
     <parameter name="OutlierChi2Cut" type="double" value="40"/>
     <!--Fitting iterations for removal of bad hits-->
     <parameter name="OutlierIterations" type="int" value="3"/>
     <!--Output root file name-->
     <parameter name="RootFileName" type="string" value="Histos-IB.root "/>
     <!--Use only events with one track in telescope-->
     <parameter name="SingleTrackEvents" type="bool" value="false"/>
     <!--Maximum Chisq for track fit-->
     <parameter name="TrackChisqMax" type="double" value="100"/>
     <!--Minimum number of track hits-->
     <parameter name="TrackMinHits" type="int" value="4"/>
   </processor>
   
   <processor name="PXDAnalysisOB" type="DEPFETDUTTool">
     <!--DEPFETDUTTool: DUT Analysis Processor-->
     <!--Name of DUT data collection-->
     <parameter name="DataCollection" type="string" lcioInType="TrackerData"> data_dep </parameter>
     <!--Name of DUT hit collection-->
     <parameter name="HitCollection" type="string" lcioInType="TrackerHit"> PXDhits </parameter>
     <!--Name of DUT noise collection-->
     <parameter name="NoiseCollection" type="string" lcioInType="TrackerData"> noise </parameter>
     <!--Name of DUT rawdata collection-->
     <parameter name="RawDataCollection" type="string" lcioInType="TrackerRawData"> rawdata_dep </parameter>
     <!--Name of DUT status collection-->
     <parameter name="StatusCollection" type="string" lcioInType="TrackerRawData"> status </parameter>
     <!--Name of telescope track collection-->
     <parameter name="TrackCollection" type="string" lcioInType="Track"> tracks </parameter>
     <!--This is the name of the LCIO file with the alignment constants (add .slcio)-->
     <parameter name="AlignmentDBFileName" type="string" value="eudet-alignmentDB.slcio"/>
     <!--Plane number of DUT along the beam line-->
     <parameter name="DUTPlane" type="int" value="1"/>
     <!--Maximum hit2track distance for hit matching [mm]-->
     <parameter name="HitDistMax" type="double" value="1.0"/>
     <!--Chi2 cut for removal of bad hits-->
     <parameter name="OutlierChi2Cut" type="double" value="40"/>
     <!--Fitting iterations for removal of bad hits-->
     <parameter name="OutlierIterations" type="int" value="3"/>
     <!--Output root file name-->
     <parameter name="RootFileName" type="string" value="Histos-OB.root "/>
     <!--Use only events with one track in telescope-->
     <parameter name="SingleTrackEvents" type="bool" value="false"/>
     <!--Maximum Chisq for track fit-->
     <parameter name="TrackChisqMax" type="double" value="100"/>
     <!--Minimum number of track hits-->
     <parameter name="TrackMinHits" type="int" value="4"/>
   </processor>

</marlin>
