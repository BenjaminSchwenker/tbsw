
This README contains an explanation of the calibration procedure of X0 images. The relevant calibration constants ares: 

1) lambda:                  calibration factor of the angle resolution sigma on the central target plane
2) momentumugradient:       Momentum gradient (in u direction) of beam particles in GeV/mm
3) momentumvgradient:       Momentum gradient (in v direction) of beam particles in GeV/mm
4) momentumoffset:          Momentum value of beam particles at (u,v)=(0,0) in GeV

The average beam momentum at DESY is parametrized by a linear function 

momentum = momentumoffset+momentumugradient*u+momentumvgradient*v

The calibration parameters are measured by fitting a X0 image from a calibration target. The calibration target is
expected to be a planar object with areas of well defined  X/X0. For the calibration software, the calibration target
must be described in a cfg file. This file is located at /path/to/work/dir/root-scripts/x0imaging/x0calibration.cfg.
It is used to to set starting parameters, measurement areas (MA) and fit options. The measurement areas can be added
as simple rectangular shapes (MA in the cfg file) with a center position, length, thickness and material parameters. 
Alternatively a line can be defined, which constructs multiple measurement areas at the same time. More detailed 
descriptions of the options can be found in the cfg file itself.

As a concrete example, we assume that a 5x5mm2 and 2 mm thick aluminium plate was used as a calibration object. 
Let us further assume that the aluminium plate was installed in the center of the telescope and a calibration run was
taken in a 2GeV electron beam. The basic steps to calibrate the telescope and reconstruct the raw data can be found 
in the main README. After editing the steering files, the telescope calibration is started using the command:

> ./calibrate.py -i '/path/to/raw/files/run000AB.raw' -x steering-files/x0-tb/ -c cal-tag

The command produces the folder cal-files/cal-tag containing the telescope calibration data 
(alignment, hotpixelmask, ...). The actual reconstruction (tracking) of the full run is started via:

> ./reco.py -i '/path/to/raw/files/run000AB.raw' -x steering-files/x0-tb/reco.xml -c cal-tag

This creates the root file /root-files/X0-run000AB-cal-tag.root. If you want to use more than one run in the X0
calibration, you need to merge the different X0 files via

> hadd X0.root X0-runAB-cal-tag.root ... X0-runXY-cal-tag.root

The next step is to produce a X0 image from the target with all calibration constants at their start values. To do 
that, first modify /path/to/workspace/root-scripts/x0imaging/image.cfg file. As start values use the following
settings:

1) lambda:                  1.0
2) momentumugradient:       0.0
3) momentumvgradient:       0.0 
4) momentumoffset:          Use nominal beam energy

Then start the GenerateImage script via

> ./path/to/workspace/root-scripts/x0imaging/GenerateImage.py -i /path/to/workspace/root-files/cal-tag/X0.root 
  -c cal-tag -d 1

This generates a root file at /path/to/workspace/root-files/cal-tag/X0-completeimage.root containing a X0 image. You
can use the TBrowser to have a look at it. Now the calibration fit can be used: 

> ./path/to/work/dir/root-scripts/x0imaging/X0Calibration.py 
  -i /path/to/work/dir/root-files/root-files/4GeV-alutarget/X0.root 
  -c cal-tag

The calibration results will be stored in a cfg file named x0cal_result.cfg, which can be found at 
/path/to/work/dir/cal-files/cal-tag/ in case the cal-tag folder exists. 

You can do some cross checks by looking at the files in /path/to/workspace/root-files/cal-tag. In the X0image_Boxes.pdf
the drawn boxes superimpose the boundaries of the measurment areas on the X0 image. The pdf can be used to check, 
whether the measurement areas are located correctly.

The root file named X0CalibrationDQM_*fitmodel*fit.root, which is also located in the results directory, contains the 
angle distributions of the tracks intersection each measurement area. The "fit" folder contains histograms and the fit
function together. After the fit the histograms in this folder one should take a look at the distributions in order 
to get an idea of the quality of the fit.

X0Calibration_results.root contains a single histogram with the fit results for lambda, the momentum offset and 
the momentum gradients. The entries of this histogram can be used to generate calibrated images of unknown target
objects. For the X0 imaging follow the instructions in README_X0Image. The most important point is to copy the 
measured calibration constants to the config file at /path/to/work/dir/root-scripts/x0imaging/image.cfg. 


Ulf Stolzenberg

GÃ¶ttingen 2017 

ulf.stolzenberg@phys.uni-goettingen.de 
