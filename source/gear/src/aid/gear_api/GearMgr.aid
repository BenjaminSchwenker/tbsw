// -*- Java -*-
package hep.gear.api ;

/** Abstract interface for a manager class that returns the Gear classes for the 
 *  relevant subdetectors.
 * 
 *
 * @author F. Gaede, DESY
 * @version $Id: GearMgr.aid,v 1.9 2008-10-22 15:10:46 engels Exp $
 */
public interface GearMgr {
    

   /** The unique detector name - typically the model name used in the simulation program
    */
    public const String& getDetectorName() const ;

    /** Get named parameters for key. This can be used to describe a subdetector that is not 
     *  yet forseen in the Gear API.
     * 
     *  @throws UnknownParameterException
     */
    public const GearParameters& getGearParameters( const String& key ) const throws UnknownParameterException ;
    
    /** Get the B field map.
     *
     *  @throws UnknownParameterException
     */
     public const BField& getBField() const throws UnknownParameterException ;
    
    
    /** Get the TPCParameters.
     *
     *  @throws UnknownParameterException
     */
    public const TPCParameters&  getTPCParameters() const throws UnknownParameterException ;
    

    /** Get the Ecal barrel parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getEcalBarrelParameters() const throws UnknownParameterException ;

    /** Get the Ecal endcap parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getEcalEndcapParameters() const throws UnknownParameterException ;

    /** Get the Ecal plug parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getEcalPlugParameters() const throws UnknownParameterException ;

    /** Get the Yoke barrel parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getYokeBarrelParameters() const throws UnknownParameterException ;

    /** Get the Yoke endcap parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getYokeEndcapParameters() const throws UnknownParameterException ;

    /** Get the Yoke plug parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getYokePlugParameters() const throws UnknownParameterException ;



    /** Get the Hcal barrel parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getHcalBarrelParameters() const throws UnknownParameterException ;

    /** Get the Hcal endcap parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getHcalEndcapParameters() const throws UnknownParameterException ;


    /** Get the Hcal ring parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters&  getHcalRingParameters() const throws UnknownParameterException ;


    /** Get the Lcal parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters & getLcalParameters() const throws UnknownParameterException ;  
	
    /** Get the LHcal parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters & getLHcalParameters() const throws UnknownParameterException ;  
	
    /** Get the BeamCal parameters.
     *
     *  @throws UnknownParameterException
     */
    public const CalorimeterParameters & getBeamCalParameters() const throws UnknownParameterException ;  
	
    /** Get the VXD parameters.
     *
     *  @throws UnknownParameterException
     */
    public const VXDParameters&  getVXDParameters() const throws UnknownParameterException ;

    /** Get the SiPlanes parameters.
     *
     *  @throws UnknownParameterException
     */
    public const SiPlanesParameters&  getSiPlanesParameters() const throws UnknownParameterException ;
   
    /** Get the TBSi parameters.
     *
     *  @throws UnknownParameterException
     */
    public const TBSiParameters&  getTBSiParameters() const throws UnknownParameterException ;   

    /** Get the point properties object.
     * 
     *  @throws NotImplementedException
     */
    public const GearPointProperties& getPointProperties()  const throws NotImplementedException ;


    /** Get the distance properties object.
     * 
     *  @throws NotImplementedException
     */
    public const GearDistanceProperties& getDistanceProperties()  const throws NotImplementedException ;


    /** Keys of all GearParameters. 
     */ 
    public const String[]& getGearParameterKeys() const ;


    /** Set detector name.
     */
    public void setDetectorName(const String& name) ;

    /** Set named parameters for key. This can be used to describe a subdetector that is not 
     *  yet forseen in the Gear API.
     */
    public void setGearParameters( const String& key , GearParameters* gearParameters )   ;
    
    
    /** Set the BField.
     */
    public void  setBField( BField* bField)   ;

    
    
    /** Set the TPCParameters.
     */
    public void  setTPCParameters( TPCParameters* tpcParameters)   ;
    

    /** Set the EcalBarrelParameters.
     */
    public void setEcalBarrelParameters( CalorimeterParameters* ecalBarrelParameters ) ;

    /** Set the EcalEndcapParameters.
     */
    public void setEcalEndcapParameters( CalorimeterParameters* ecalEndcapParameters ) ;
    
    /** Set the EcalPlugParameters.
     */
    public void setEcalPlugParameters( CalorimeterParameters* ecalPlugParameters ) ;
    
    /** Set the YokeBarrelParameters.
     */
    public void setYokeBarrelParameters( CalorimeterParameters* ecalBarrelParameters ) ;

    /** Set the YokeEndcapParameters.
     */
    public void setYokeEndcapParameters( CalorimeterParameters* ecalEndcapParameters ) ;
    
    /** Set the YokePlugParameters.
     */
    public void setYokePlugParameters( CalorimeterParameters* ecalPlugParameters ) ;
 

    /** Set the HcalBarrelParameters.
     */
    public void setHcalBarrelParameters( CalorimeterParameters* hcalBarrelParameters ) ;

    /** Set the HcalEndcapParameters.
     */
    public void setHcalEndcapParameters( CalorimeterParameters* hcalEndcapParameters ) ;
    
    /** Set the HcalRingParameters.
     */
    public void setHcalRingParameters( CalorimeterParameters* hcalRingParameters ) ;
    
    /** Set the VXDParameters.
     */
    public void setVXDParameters( VXDParameters* vxdParameters ) ;

    
    /** Set the SiPlanesParameters.
     */
    public void setSiPlanesParameters( SiPlanesParameters* siplanesParameters ) ;

    /** Set the TBSiParameters.
     */
    public void setTBSiParameters( TBSiParameters* tbsiParameters ) ;
   
    /** Set the LcalParameters.
     */
    public void setLcalParameters( CalorimeterParameters* lcalParameters ) ;

    /** Set the LHcalParameters.
     */
    public void setLHcalParameters( CalorimeterParameters* lhcalParameters ) ;

    /** Set the BeamCalParameters.
     */
    public void setBeamCalParameters( CalorimeterParameters* beamcalParameters ) ;

    /** Set the point properties object.
     */
    public void  setPointProperties( GearPointProperties* pointProperties)   ;


    /** Set the distance properties object.
     */
    public void  setDistanceProperties( GearDistanceProperties* distanceProperties )   ;


}
