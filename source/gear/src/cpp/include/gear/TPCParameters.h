// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef GEAR_TPCPARAMETERS_H
#define GEAR_TPCPARAMETERS_H 1

#include "gear/GearParameters.h"

namespace gear {

class PadRowLayout2D;

/** Proposal for an abstract interface that defines the geometry properties of
 * a TPC like detector needed for reconstruction code. <br>
 * This assumes a row based layout of the pads, either in a cartesian or in a 
 * polar angle coordinate system.  <br>
 * Most of this class is based on ideas by Dean Karlen.
 * 
 * @author F. Gaede, DESY
 * @version $Id: TPCParameters.aid,v 1.1.1.1 2005-09-13 14:41:03 gaede Exp $
 */
class TPCParameters : virtual public GearParameters {

public: 
    /// Destructor.
    virtual ~TPCParameters() { /* nop */; }

    /** The pad layout in the endcaps */
    virtual const PadRowLayout2D & getPadLayout() const = 0;

    /** The maximum drift length in the TPC in mm.
     */
    virtual double getMaxDriftLength() const = 0;

    /** The electron drift velocity in the TPC in mm/s.
     */
    virtual double getDriftVelocity() const = 0;

    /** The readout frequency in Hz.
     */
    virtual double getReadoutFrequency() const = 0;
}; // class
} // namespace gear
#endif /* ifndef GEAR_TPCPARAMETERS_H */
