// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef GEAR_TBSIPARAMETERS_H
#define GEAR_TBSIPARAMETERS_H 1

#include <string>

#include "gear/GearParameters.h"

namespace gear {

/**Geometry properties of TBSiDet - Testbeam geometry for silicon sensors
   *  @author Z. Drasal, Charles University
   *  @version $Id: 
   */
	
class TBSiParameters : virtual public GearParameters {

public: 
    /// Destructor.
    virtual ~TBSiParameters() { /* nop */; }

/** Get setup name
  */ 
    virtual std::string getSetupName() const = 0;

/** Get total number of modules
  */
    virtual short getNModules() const = 0;

/** Get module name
  */
    virtual std::string getModuleName(short moduleID) const = 0;

/** Get sensor size in X (in mm)
  */
    virtual double getSensorSizeX(short moduleID) const = 0;

/** Get sensor size in Y (in mm)
  */
    virtual double getSensorSizeY(short moduleID) const = 0;

/** Get sensor size in Z (in mm)
  */
    virtual double getSensorSizeZ(short moduleID) const = 0;

/** Get sensor position X in mm
  */
    virtual double getSensorPosX(short moduleID) const = 0;

/** Get sensor position Y in mm
  */
    virtual double getSensorPosY(short moduleID) const = 0;

/** Get sensor position Z in mm
  */
    virtual double getSensorPosZ(short moduleID) const = 0;

/** Get sensor rotation around X axis (in degrees)
  */
    virtual double getSensorRotX(short moduleID) const = 0;

/** Get sensor radiation length (in mm)
  */
    virtual double getSensorRadLength(short moduleID) const = 0;

/** Get sensor pad size in X (in mm)
  */
    virtual double getSensorPadSizeX(short moduleID) const = 0;

/** Get sensor pad size in Y (in mm)
  */
    virtual double getSensorPadSizeY(short moduleID) const = 0;

/** Get window size in X (in mm)
  */
    virtual double getWindowSizeX(short moduleID) const = 0;

/** Get window size in Y (in mm)
  */
    virtual double getWindowSizeY(short moduleID) const = 0;

/** Get window size in Z (in mm)
  */
    virtual double getWindowSizeZ(short moduleID) const = 0;

/** Get window radiation length (in mm)
  */
    virtual double getWindowRadLength(short moduleID) const = 0;

/** Get window relative position in Z (wrt sensor) (in mm)
  */ 
    virtual double getWindowRelPosZ(short moduleID) const = 0;
}; // class
} // namespace gear
#endif /* ifndef GEAR_TBSIPARAMETERS_H */
