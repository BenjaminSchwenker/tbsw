// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef EVENT_LCRUNHEADER_H
#define EVENT_LCRUNHEADER_H 1

#include <string>
#include <vector>

#include "EVENT/LCObject.h"
#include "EVENT/LCParameters.h"

namespace EVENT {

/** Interface for the run header. 
 *
 * @author gaede
 * @version $Id: LCRunHeader.aid,v 1.8 2006/03/24 13:25:52 gaede Exp $
 */
class LCRunHeader : public LCObject {

public: 
    /// Destructor.
    virtual ~LCRunHeader() { /* nop */; }


    /** Useful typedef for template programming with LCIO */
    typedef LCRunHeader lcobject_type ;

    /** Returns the run number.
     */
    virtual int getRunNumber() const = 0;

    /** Returns the name of the detector setup used in the simulation.
     */
    virtual const std::string & getDetectorName() const = 0;

    /** Description of the simulation, physics channels etc.
     */		 
    virtual const std::string & getDescription() const = 0;

    /** Returns the names of the active subdetectors
     *  used in the simulation.
     */ 
    virtual const std::vector<std::string>  * getActiveSubdetectors() const = 0;

    /** Parameters defined for this run.
     */
    virtual const LCParameters & getParameters() const = 0;

    /** Parameters defined for this run.
     */
    virtual LCParameters & parameters() = 0;
}; // class
} // namespace EVENT
#endif /* ifndef EVENT_LCRUNHEADER_H */
