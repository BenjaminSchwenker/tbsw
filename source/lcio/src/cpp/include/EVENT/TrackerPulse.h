// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef EVENT_TRACKERPULSE_H
#define EVENT_TRACKERPULSE_H 1

#include "EVENT/LCObject.h"

namespace EVENT {

class TrackerData;

/** Tracker pulses as computed from  TrackerData objects or as directly measured by a specific
 *  subdetector. Typically TrackerHIts are created from TrackerPulses by some sort of clustering.
 *  @see TrackerRawData
 *  @see TrackerData
 * 
 * @author gaede
 * @version $Id: TrackerPulse.aid,v 1.2 2006/03/24 13:25:53 gaede Exp $
 */

class TrackerPulse : public LCObject {

public: 
    /// Destructor.
    virtual ~TrackerPulse() { /* nop */; }


    /** Useful typedef for template programming with LCIO */
    typedef TrackerPulse lcobject_type ;

    /** Returns the first detector specific (geometrical) cell id.
     */
    virtual int getCellID0() const = 0;

    /** Returns the second detector specific (geometrical) cell id. Optional, check/set 
     *  flag(LCIO::TRAWBIT_ID1)==1.
     */
    virtual int getCellID1() const = 0;

    /** The time of the pulse - arbitrary units.
     */
    virtual float getTime() const = 0;

    /** The integrated charge of the pulse - arbitrary units.
     */
    virtual float getCharge() const = 0;

    /** The quality bit flag of the pulse - check/set collection parameters 
     *  TrackerPulseQualityNames and TrackerPulseQualityNamesValues.
     */
    virtual int getQuality() const = 0;

    /** Optionally the TrackerData that has been used to create the pulse
     *  can be stored with the pulse - NULL if none. Check the quality bits for reason
     *  why the spectrum has been stored for the pulse.
     */
    virtual TrackerData * getTrackerData() const = 0;
}; // class
} // namespace EVENT
#endif /* ifndef EVENT_TRACKERPULSE_H */
