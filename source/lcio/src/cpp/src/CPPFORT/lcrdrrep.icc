
extern "C"{
  void processevent_( PTRTYPE* ) ;
  void modifyevent_( PTRTYPE* ) ;
  void processrunheader_( PTRTYPE* ) ;
  void modifyrunheader_( PTRTYPE* ) ;
//  void processevent_( PTRTYPE* ) {}
//  void modifyevent_( PTRTYPE* ) {}
//  void processrunheader_( PTRTYPE* ) {}
//  void modifyrunheader_( PTRTYPE* ) {}
}


class RunEventProcessor : public LCRunListener, public LCEventListener{
  
public:
  
  RunEventProcessor() {
    
  }
  
  ~RunEventProcessor(){

  }
  
  void processEvent( LCEvent * evt ) { /* used for 'read only' access*/ 

    PTRTYPE event = reinterpret_cast<PTRTYPE>( evt ) ;
    processevent_( &event ) ;

  }

  void modifyEvent( LCEvent * evt ) {

    PTRTYPE event = reinterpret_cast<PTRTYPE>( evt ) ;
    modifyevent_ ( &event ) ;

   }
  

  void processRunHeader( LCRunHeader* run ){

    PTRTYPE header = reinterpret_cast<PTRTYPE>( run ) ;
    processrunheader_ ( &header ) ;

  }

  void modifyRunHeader(LCRunHeader* run ){

    PTRTYPE header = reinterpret_cast<PTRTYPE>( run ) ;
    modifyrunheader_ ( &header ) ;

  }

} ;


