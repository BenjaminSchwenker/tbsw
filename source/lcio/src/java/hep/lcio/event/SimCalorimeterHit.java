// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================

package hep.lcio.event;


/** The generic simulated calorimeter hit. 
 * 
 * @author gaede
 * @version $Id: SimCalorimeterHit.aid,v 1.8 2006/03/24 13:25:52 gaede Exp $
 */

public interface SimCalorimeterHit extends LCObject {

    /**Returns the detector specific (geometrical) cell id.
     */
    public int getCellID0();

    /**Returns the second detector specific (geometrical) cell id.
     *  0 if information is not stored -  check the flag word (bit CHBIT_ID1) 
     *  of the collection. Default is to store only cellid0.
     */
    public int getCellID1();

    /** Returns the energy of the hit in [GeV].
     */
    public float getEnergy();

    /** Returns the position of the hit in world coordinates.
     *  NULL if information is not stored -  check the flag word (bit CHBIT_LONG) 
     *  of the collection.
     */
    public float[] getPosition();

    /** Returns the number of MC contributions to the hit. 0 if 
     * information is not stored. Renamed to getNMCContributions.
     * @deprecated
     * @see getNMCContributions()
     */
    public int getNMCParticles();

    /** Returns the number of MC contributions to the hit. 0 if 
     * information is not stored. There are two levels of detail: if 
     * collection flag bit LCIO.CHBIT_PDG==1 then all simulator steps' 
     * contributions to the hit are stored, otherwise there is only one 
     * contribution for every particle entering the calorimeter.
     */
    public int getNMCContributions();

    /** Returns the energy in [GeV] of the i-th contribution to the hit.
     * @see getNMCContributions()
     */ 
    public float getEnergyCont(int i);

    /** Returns the time of the i-th in [ns]  contribution to the hit.
     * @see getNMCContributions()
     */ 
    public float getTimeCont(int i);

    /** Returns the PDG code of the shower particle that caused this contribution.
     *  Check the flag word bit LCIO.CHBIT_PDG of the collection whether this information 
     *  is available. 
     * @see getNMCContributions()
     */ 
    public int getPDGCont(int i);

    /** Returns the MCParticle that caused the shower responsible for this contribution to the hit.
     *  This is the particle that flew into the calorimeter and not the shower particle that made the 
     *  energy deposition.
     * @see getNMCContributions()
     */
    public MCParticle getParticleCont(int i);
} // class or interface

