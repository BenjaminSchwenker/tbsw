// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================

package hep.lcio.event;

import java.util.List;

/** A generic tracker hit to be used by pattern recognition.
 * 
 * @author gaede
 * @version $Id: TrackerHit.aid,v 1.12 2009/07/22 16:03:35 engels Exp $
 */

public interface TrackerHit extends LCObject {

    /** The hit  position in [mm].	
     */
    public double[] getPosition();

    /** Covariance of the position (x,y,z), stored as lower triangle matrix. i.e.
     *  cov(x,x) , cov(y,x) , cov(y,y) , cov(z,x) , cov(z,y) , cov(z,z).
     */
    public float[] getCovMatrix();

    /** The dE/dx of the hit in [GeV].
     */ 	
    public float getdEdx();

    /** The  time of the hit in [ns].
     */
    public float getTime();

    //     /**Type of raw data hit, either one of<br>
    //      * LCIO::TPCHIT<br>
    //      * LCIO::SIMTRACKERHIT<br>
    //      */
    //    public const String& getType() const ;
    /** Type of hit. Mapping of integer types to type names
     * through collection parameters "TrackerHitTypeNames"
     * and "TrackerHitTypeValues".
     */
    public int getType();

    /** The quality bit flag of the hit */
    public int getQuality();

    /** The raw data hits. 
     * Check getType() to get actual data type.
     */
    public List getRawHits();

//     public void setPosition( double3V pos) ;
//     public void setCovMatrix( const FloatVec& cov) ;
//     public void setdEdx( float dEdx ) ;
//     public void setTime( float time ) ;
//     public void setTPCHit( TPCHit* hit ) ;
} // class or interface

