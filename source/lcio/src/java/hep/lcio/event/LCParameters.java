// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================

package hep.lcio.event;



import hep.lcio.exceptions.* ;
/** Simple interface to store generic named parameters of type
 *  int, float and string. 
 *  It can be used  to store (user) meta data that is 
 *  run, event or collection dependent. 
 * 
 * @author gaede 
 * @version $Id: LCParameters.aid,v 1.3 2009/11/20 11:20:20 gaede Exp $
 * @see LCRunHeader.parameters()
 * @see LCEvent.parameters()
 * @see LCCollection.parameters()
 */

public interface LCParameters {

    /** Returns the first integer value for the given key.
     */
    public int getIntVal(String key);

    /** Returns the first float value for the given key.
     */
    public float getFloatVal(String key);

    /** Returns the first string value for the given key.
     */
    public String getStringVal(String key);

    /** Returns values for the given key.
     */
    public int[] getIntVals(String key);

    /** Returns values for the given key.
     */
    public float[] getFloatVals(String key);

    /** Returns values for the given key.
     */
    public String[] getStringVals(String key);

    /** Returns a list of all keys of integer parameters.
     */
    public String[] getIntKeys();

    /** Returns a list of all keys of float parameters.
     */
    public String[] getFloatKeys();

    /** Returns a list of all keys of string parameters.
     */
    public String[] getStringKeys();

    /** The number of integer values stored for this key.
     */ 
    public int getNInt(String key);

    /** The number of float values stored for this key.
     */ 
    public int getNFloat(String key);

    /** The number of string values stored for this key.
     */ 
    public int getNString(String key);

    /** Set integer value for the given key.
     */
    public void setValue(String key, int value);

    /** Set float value for the given key.
     */
    public void setValue(String key, float value);

    /** Set string value for the given key.
     */
    public void setValue(String key, String value);

    /** Set integer values for the given key.
     */
    public void setValues(String key, int[] values);

    /** Set float values for the given key.
     */
    public void setValues(String key, float[] values);

    /** Set string values for the given key.
     */
    public void setValues(String key, String[] values);
} // class or interface

