package hep.lcio.event ;

/** Tracker pulses as computed from  TrackerData objects or as directly measured by a specific
 *  subdetector. Typically TrackerHIts are created from TrackerPulses by some sort of clustering.
 *  @see TrackerRawData
 *  @see TrackerData
 * 
 * @author gaede
 * @version $Id: TrackerPulse.aid,v 1.2 2006/03/24 13:25:53 gaede Exp $
 */

public interface TrackerPulse extends LCObject {
    
@ifdef cpp
@cpp{
    /** Useful typedef for template programming with LCIO */
    typedef TrackerPulse lcobject_type ;

}
@endif

    /** Returns the first detector specific (geometrical) cell id.
     */
    public int getCellID0() const ;
    
    /** Returns the second detector specific (geometrical) cell id. Optional, check/set 
     *  flag(LCIO::TRAWBIT_ID1)==1.
     */
    public int getCellID1() const ;
    
    /** The time of the pulse - arbitrary units.
     */
    public float getTime() const ;	
    
    /** The integrated charge of the pulse - arbitrary units.
     */
    public float getCharge() const ;	
    
    /** The quality bit flag of the pulse - check/set collection parameters 
     *  TrackerPulseQualityNames and TrackerPulseQualityNamesValues.
     */
    public int getQuality() const ;	
    
    /** Optionally the TrackerData that has been used to create the pulse
     *  can be stored with the pulse - NULL if none. Check the quality bits for reason
     *  why the spectrum has been stored for the pulse.
     */
    public TrackerData* getTrackerData() const ;	
}


