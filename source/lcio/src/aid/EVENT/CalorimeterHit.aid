package hep.lcio.event ;

@ifdef cpp
@cpp{
#include <vector>
}
@endif
    @ifdef IGNORE // we have to split the cpp stuff - includes should go outside namespace 
    @endif

@ifdef cpp
@cpp{
class CalorimeterHit ;
/**Vector of (pointers to) CalorimeterHits.*/
typedef std::vector<CalorimeterHit*> CalorimeterHitVec ;
}
@endif

/** The generic calorimeter hit - created from SimCalorimeterHit or
 *  RawCalorimeterHit. The difference to RawCalorimeterHit is that amplitude
 *  ( energy) and time are now float and an optional position (x,y,z) can be stored
 *  with the hit.
 *  In order to suppress a (32-bit) pointer tag stored with every hit set
 *  flag(LCIO::RCHBIT_NO_PTR)==1. 
 *  
 * @author gaede
 * @version $Id: CalorimeterHit.aid,v 1.16 2008/06/04 17:37:15 engels Exp $
 */

public interface CalorimeterHit extends LCObject {
    
@ifdef cpp
@cpp{
    /** Useful typedef for template programming with LCIO */
    typedef CalorimeterHit lcobject_type ;

}
@endif

    /** Returns the detector specific (geometrical) cell id.
     */
    public int getCellID0() const ;
    
    /** Returns the second detector specific (geometrical) cell id. Optional, check/set 
     *  flag(LCIO::RCHBIT_ID1)==1.
     */
    public int getCellID1() const ;
    
    /** Returns the energy of the hit in [GeV].
     */
    public float getEnergy() const ;

    /** Returns the error of the hit energy in [GeV]. Optional, check/set
     *  flag(LCIO::RCHBIT_ENERGY_ERROR)==1.
     */
    public float getEnergyError() const ;

    /** Returns the time of the hit in [ns]. Optional, check/set 
     *  flag(LCIO::RCHBIT_TIME)==1.
     */
    public float getTime() const ;
    
    /** Returns the position of the hit in world coordinates.
     *  NULL if information is not stored - check 
     *  flag(LCIO::RCHBIT_LONG)==1.
     */
    public const float3V getPosition() const ;	


    /** Type of hit. Mapping of integer types to type names
     * through collection parameters "CalorimeterHitTypeNames"
     * and "CalorimeterHitTypeValues".
     */
    public int getType() const ;


    /** The RawCalorimeterHit. As in the future there might be other types of 
     *  raw calorimeter hits the return type is LCObject.
     */
    LCObject* getRawHit() const ;

}
