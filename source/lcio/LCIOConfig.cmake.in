###############################################
# cmake configuration file for LCIO
# @author Jan Engels, DESY
###############################################

SET( LCIO_FOUND FALSE )
MARK_AS_ADVANCED( LCIO_FOUND )

# do not store find results in cache
SET( LCIO_INCLUDE_DIR LCIO_INCLUDE_DIR-NOTFOUND )

FIND_PATH( LCIO_INCLUDE_DIR
	NAMES lcio.h
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES src/cpp/include include
	NO_DEFAULT_PATH
)
IF( NOT LCIO_INCLUDE_DIR )
    MESSAGE( STATUS "Check for LCIO: ${LCIO_HOME}"
					" -- failed to find LCIO include directory!!" )
ELSE( NOT LCIO_INCLUDE_DIR )
    MARK_AS_ADVANCED( LCIO_INCLUDE_DIR )
ENDIF( NOT LCIO_INCLUDE_DIR )


# do not store find results in cache
SET( LCIO_LIB LCIO_LIB-NOTFOUND )

FIND_LIBRARY( LCIO_LIB
	NAMES lcio
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES lib
	NO_DEFAULT_PATH
)
IF( NOT LCIO_LIB )
    MESSAGE( STATUS "Check for LCIO: ${LCIO_HOME}"
					" -- failed to find LCIO library!!" )
ELSE( NOT LCIO_LIB )
    MARK_AS_ADVANCED( LCIO_LIB )
ENDIF( NOT LCIO_LIB )

# do not store find results in cache
SET( SIO_LIB SIO_LIB-NOTFOUND )

FIND_LIBRARY( SIO_LIB
	NAMES sio
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES lib
	NO_DEFAULT_PATH
)
IF( NOT SIO_LIB )
    MESSAGE( STATUS "Check for LCIO: ${LCIO_HOME}"
					" -- failed to find SIO library!!" )
ELSE( NOT SIO_LIB )
    MARK_AS_ADVANCED( SIO_LIB )
ENDIF( NOT SIO_LIB )

# set variables and display results
IF( LCIO_INCLUDE_DIR AND LCIO_LIB AND SIO_LIB )
    SET( LCIO_FOUND TRUE )
    SET( LCIO_INCLUDE_DIRS ${LCIO_INCLUDE_DIR} )
    SET( LCIO_LIBRARY_DIRS "@CMAKE_INSTALL_PREFIX@/lib" )
	SET( LCIO_LIBRARIES ${LCIO_LIB} ${SIO_LIB} )
    #SET( LCIO_DEFINITIONS "-Wno-long-long" )
    MARK_AS_ADVANCED( LCIO_INCLUDE_DIRS LCIO_LIBRARY_DIRS LCIO_LIBRARIES )
	MESSAGE( STATUS "Check for LCIO: ${LCIO_HOME} -- works" )
ELSE( LCIO_INCLUDE_DIR AND LCIO_LIB AND SIO_LIB )
	IF( LCIO_FIND_REQUIRED )
		MESSAGE( FATAL_ERROR "Check for LCIO: ${LCIO_HOME} -- failed!!" )
    ELSE( LCIO_FIND_REQUIRED )
        MESSAGE( STATUS "Check for LCIO: ${LCIO_HOME}"
						" -- failed!! will skip this package..." )
    ENDIF( LCIO_FIND_REQUIRED )
ENDIF( LCIO_INCLUDE_DIR AND LCIO_LIB AND SIO_LIB )
